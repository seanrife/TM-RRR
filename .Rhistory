range(c(0, 0, 3, 2, 4, 0, 3, 6, 1, 3))
sd(c(3, 1, 5, 7, 4, 6, 3, 12, 15, 12, 4, 6, 8))
IQR(c(3, 1, 5, 7, 4, 6, 3, 12, 15, 12, 4, 6, 8))
?iqr
?IQR
IQR(c(3, 1, 5, 7, 4, 6, 3, 12, 15, 12, 4, 6, 8), type=6)
x <- c(.497
.256
.463
.396
.432
.294
.347)
setwd("D:/GitHub/TM-RRR")
# Analysis for RRR of Trafimow and Hughes (2012), Study 3
# Sean C. Rife / @seanrife / seanrife.com / srife1@murraystate.edu
# Clean house
rm(list = ls())
#### USER-DEFINED VARIABLES ####
# Set base directory
# Uses this to look for main datasets, ratings & exclusions
baseDir <- "I:\\Dropbox\\Research\\TM RRR" # DESKTOP
#baseDir <- "C:\\Users\\srife1\\Dropbox\\Research\\TM RRR" # LAPTOP
# Set input directory
# Should contain a summary file for all labs (LabInfo.csv)
# Should also contain 3 files for each lab (with lab name appended to the beginning):
#   1. _main.csv - main dataset
#   2. _rating.csv - ratings of the words from each lab
#   3. _exclude - manually-identified exclusions
dataDir <- paste0(baseDir, "\\data")
# Location for output (text and graphs)
outDir <- paste0(baseDir, "\\output")
# CODE BELOW NEED NOT BE MODIFIED
################################
#### READ IN AND CLEAN DATA ####
################################
# Load required libraries
if(!require(metafor)){install.packages('metafor')}
library(metafor)
if(!require(yarrr)){install.packages('yarrr')}
library(yarrr)
if(!require(effsize)){install.packages('effsize')}
library(effsize)
if(!require(plotrix)){install.packages('plotrix')}
library(plotrix)
if(!require(ggplot2)){install.packages('ggplot2')}
library(ggplot2)
if(!require(Cairo)){install.packages('Cairo')}
library(Cairo)
mergedDF <- data.frame()
# Read in lab info
labInfo <- read.csv(paste0(dataDir,"\\LabInfo.csv"), stringsAsFactors=FALSE)
# Create dataframes for descriptive tables
PRIMARY_DV1_descriptives <- labInfo
PRIMARY_DV2_descriptives <- labInfo
SECONDARY_DV1_descriptives <- labInfo
SECONDARY_DV2_descriptives <- labInfo
# Lab names; used for reading in data and labeling
labNames <- as.vector(labInfo$labID)
# Initialize containers for output data
PRIMARY_DV1_metaVecES <- vector()
PRIMARY_DV1_metaVecSE <- vector()
PRIMARY_DV1_metaVecMeanExp <- vector()
PRIMARY_DV1_metaVecMeanCtrl <- vector()
PRIMARY_DV1_metaVecR <- vector()
PRIMARY_DV1_metaVecN <- vector()
PRIMARY_DV2_metaVecES <- vector()
PRIMARY_DV2_metaVecSE <- vector()
PRIMARY_DV2_metaVecMeanExp <- vector()
PRIMARY_DV2_metaVecMeanCtrl <- vector()
PRIMARY_DV2_metaVecR <- vector()
PRIMARY_DV2_metaVecN <- vector()
SECONDARY_DV1_metaVecES <- vector()
SECONDARY_DV1_metaVecSE <- vector()
SECONDARY_DV1_metaVecMeanExp <- vector()
SECONDARY_DV1_metaVecMeanCtrl <- vector()
SECONDARY_DV2_metaVecES <- vector()
SECONDARY_DV2_metaVecSE <- vector()
SECONDARY_DV2_metaVecMeanExp <- vector()
SECONDARY_DV2_metaVecMeanCtrl <- vector()
# Function to read in and clean datafiles from each lab
readInFile <- function(filename) {
df <- read.csv(filename, header = T, stringsAsFactors = F, check.names=F)
# LS places problematic characters in variable names. Remove them.
names(df) <- gsub(x = names(df),
pattern = "\\]",
replacement = "")
names(df) <- gsub(x = names(df),
pattern = "\\[",
replacement = "_")
names(df) <- gsub(x = names(df),
pattern = "\\_SQ001",
replacement = "")
# Delete variables we don't need
df <- df[, -c(which(colnames(df)=="DEBRIEFING"):which(colnames(df)=="WTDP2Time"))]
df <- df[, -c(which(colnames(df)=="ARTICLETime"):which(colnames(df)=="DEBRIEFINGTime"))]
# Change the only time variable we care about to something meaningful
colnames(df)[ncol(df)] <- "DelayTime"
return(df)
}
# Function to read in list of death-related words and check for consistency with letters
letter_search <- function(word) {
letters <- c("c", "o", "b", "u", "r", "e", "s", "a", "t", "k", "i", "l", "d", "h", "p", "l", "m", "g", "v")
word_split <- strsplit(word, "")
match <- TRUE
for (letter in word_split) {
for (l in letter) {
if (l %in% letters) {
letters <- letters[letters != l]
#print(letters)
}
else {
match <- FALSE
}
}
}
return(match)
}
is_deathword <- function(x, deathwords){
word <- tolower(x)
word <- gsub(" ", "", word)
if (word %in% deathwords){
return(TRUE)
}
else{
return(FALSE)
}
}
raw_deathwords <- scan("DeathWordList.txt", what="", sep="\n")
deathwords = c()
# Produce a list of death-related words for DV2
for (word in raw_deathwords) {
if (letter_search(word)) {
deathwords <- c(deathwords, word)
}
}
for (lab in labNames) {
workingLabPathMain <- paste0(dataDir,"\\",lab,"_main.csv")
workingLabPathExclude <- paste0(dataDir,"\\",lab,"_exclude.csv")
df_main <- readInFile(workingLabPathMain)
df_exclude <- read.csv(workingLabPathExclude)
df <- merge(df,df_exclude,by=c("id","labID"))
# Put N info into labInfo DF
labInfo$N[labInfo$labID == as.factor(lab)] <- nrow(df)
# Exclude flagged cases or those who failed exit interview
df <- df[df$FLAG==0,]
df <- df[df$Understand==1,]
df <- df[df$Familiar==0,]
## ADD REMOVAL BASED ON TIME HERE ##
# Exclude if participant took less than 3 minutes to complete the survey
df$COUNT_DV1 <- 0
df$COUNT_DV2 <- 0
# Put N info into labInfo DF (with exclusions)
labInfo$Nused[labInfo$labID == as.factor(lab)] <- nrow(df)
# Put % female intoLabInfo DF
TotalWithGender <- table(df$Gender)[names(table(df$Gender))==2] + table(df$Gender)[names(table(df$Gender))==1]
labInfo$percFemale[labInfo$labID == as.factor(lab)] <- format(100*(table(df$Gender)[names(table(df$Gender))==2]/TotalWithGender), digits=3)
# Get mean and SD of age
labInfo$ageMean[labInfo$labID == as.factor(lab)] <- format(mean(df$Age), digits=3)
labInfo$ageSD[labInfo$labID == as.factor(lab)] <- format(sd(df$Age), digits=3)
# Create group identifiers for original experiment
df$originalExperiment <- 0
df$originalExperiment[df$essayGroup==1 & df$delayGroup==1] <- 1
# Create group identifiers for secondary analysis
df$secondaryAnalysis <- 0
df$secondaryAnalysis[df$essayGroup==1] <- 1
# Add to merged dataframe
mergedDF <- rbind(mergedDF, df)
# Calculate tests/stats for primary analysis
PRIMARY_DV1_m_exp <- mean(df$COUNT_DV1[df$originalExperiment==1])
PRIMARY_DV1_sd_exp <- sd(df$COUNT_DV1[df$originalExperiment==1])
PRIMARY_DV1_m_ctrl <- mean(df$COUNT_DV1[df$originalExperiment==0])
PRIMARY_DV1_sd_ctrl <- sd(df$COUNT_DV1[df$originalExperiment==0])
PRIMARY_DV1_r <- cor.test(df$COUNT_DV1, df$DelayTime)
PRIMARY_DV1_se <- std.error(df$COUNT_DV1)
# For descriptive stats table
PRIMARY_DV1_descriptives$mean_exp[PRIMARY_DV1_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV1_m_exp, digits=3)
PRIMARY_DV1_descriptives$sd_exp[PRIMARY_DV1_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV1_sd_exp, digits=3)
PRIMARY_DV1_descriptives$mean_ctrl[PRIMARY_DV1_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV1_m_ctrl, digits=3)
PRIMARY_DV1_descriptives$sd_ctrl[PRIMARY_DV1_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV1_sd_ctrl, digits=3)
PRIMARY_DV1_metaVecR <- c(PRIMARY_DV1_metaVecR, PRIMARY_DV1_r$estimate)
PRIMARY_DV1_metaVecN <- c(PRIMARY_DV1_metaVecN, (PRIMARY_DV1_r$parameter + 2))
PRIMARY_DV1_metaVecES <- c(PRIMARY_DV1_metaVecES, (PRIMARY_DV1_m_exp-PRIMARY_DV1_m_ctrl))
PRIMARY_DV1_metaVecSE <- c(PRIMARY_DV1_metaVecSE, PRIMARY_DV1_se)
PRIMARY_DV1_metaVecMeanExp <- c(PRIMARY_DV1_metaVecMeanExp, PRIMARY_DV1_m_exp)
PRIMARY_DV1_metaVecMeanCtrl <- c(PRIMARY_DV1_metaVecMeanCtrl, PRIMARY_DV1_m_ctrl)
# Calculate tests/stats for primary analysis
PRIMARY_DV2_m_exp <- mean(df$COUNT_DV2[df$originalExperiment==1])
PRIMARY_DV2_sd_exp <- sd(df$COUNT_DV2[df$originalExperiment==1])
PRIMARY_DV2_m_ctrl <- mean(df$COUNT_DV2[df$originalExperiment==0])
PRIMARY_DV2_sd_ctrl <- sd(df$COUNT_DV2[df$originalExperiment==0])
PRIMARY_DV2_r <- cor.test(df$COUNT_DV2, df$DelayTime)
PRIMARY_DV2_se <- std.error(df$COUNT_DV2)
# For descriptive stats table
PRIMARY_DV2_descriptives$mean_exp[PRIMARY_DV2_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV2_m_exp, digits=3)
PRIMARY_DV2_descriptives$sd_exp[PRIMARY_DV2_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV2_sd_exp, digits=3)
PRIMARY_DV2_descriptives$mean_ctrl[PRIMARY_DV2_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV2_m_ctrl, digits=3)
PRIMARY_DV2_descriptives$sd_ctrl[PRIMARY_DV2_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV2_sd_ctrl, digits=3)
PRIMARY_DV2_metaVecR <- c(PRIMARY_DV2_metaVecR, PRIMARY_DV2_r$estimate)
PRIMARY_DV2_metaVecN <- c(PRIMARY_DV2_metaVecN, (PRIMARY_DV2_r$parameter + 2))
PRIMARY_DV2_metaVecES <- c(PRIMARY_DV2_metaVecES, (PRIMARY_DV2_m_exp-PRIMARY_DV2_m_ctrl))
PRIMARY_DV2_metaVecSE <- c(PRIMARY_DV2_metaVecSE, PRIMARY_DV2_se)
PRIMARY_DV2_metaVecMeanExp <- c(PRIMARY_DV2_metaVecMeanExp, PRIMARY_DV2_m_exp)
PRIMARY_DV2_metaVecMeanCtrl <- c(PRIMARY_DV2_metaVecMeanCtrl, PRIMARY_DV2_m_ctrl)
# Calculate tests/stats for secondary analysis
# Many of these will be identical to primary analyses,
# but calculating for the sake of clarity
SECONDARY_DV1_m_exp <- mean(df$COUNT_DV1[df$secondaryAnalysis==1])
SECONDARY_DV1_sd_exp <- sd(df$COUNT_DV1[df$secondaryAnalysis==1])
SECONDARY_DV1_m_ctrl <- mean(df$COUNT_DV1[df$secondaryAnalysis==0])
SECONDARY_DV1_sd_ctrl <- sd(df$COUNT_DV1[df$secondaryAnalysis==0])
SECONDARY_DV1_n_exp <- length(df$COUNT_DV1[df$secondaryAnalysis==1])
SECONDARY_DV1_n_ctrl <- length(df$COUNT_DV1[df$secondaryAnalysis==0])
SECONDARY_DV1_d <- cohen.d(df$COUNT_DV1, as.factor(df$secondaryAnalysis))$estimate
SECONDARY_DV1_d_CI_UPPER <- cohen.d(df$COUNT_DV1, as.factor(df$secondaryAnalysis))$conf.int[2]
SECONDARY_DV1_d_CI_LOWER <- cohen.d(df$COUNT_DV1, as.factor(df$secondaryAnalysis))$conf.int[1]
SECONDARY_DV1_se <- std.error(df$COUNT_DV1)
# For descriptive stats table
SECONDARY_DV1_descriptives$mean_exp[SECONDARY_DV1_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV1_m_exp, digits=3)
SECONDARY_DV1_descriptives$sd_exp[SECONDARY_DV1_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV1_sd_exp, digits=3)
SECONDARY_DV1_descriptives$mean_ctrl[SECONDARY_DV1_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV1_m_ctrl, digits=3)
SECONDARY_DV1_descriptives$sd_ctrl[SECONDARY_DV1_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV1_sd_ctrl, digits=3)
SECONDARY_DV1_metaVecES <- c(SECONDARY_DV1_metaVecES, (SECONDARY_DV1_d))
SECONDARY_DV1_metaVecSE <- c(SECONDARY_DV1_metaVecSE, SECONDARY_DV1_se)
SECONDARY_DV1_metaVecMeanExp <- c(SECONDARY_DV1_metaVecMeanExp, SECONDARY_DV1_m_exp)
SECONDARY_DV1_metaVecMeanCtrl <- c(SECONDARY_DV1_metaVecMeanCtrl, SECONDARY_DV1_m_ctrl)
SECONDARY_DV2_m_exp <- mean(df$COUNT_DV2[df$secondaryAnalysis==1])
SECONDARY_DV2_sd_exp <- sd(df$COUNT_DV2[df$secondaryAnalysis==1])
SECONDARY_DV2_m_ctrl <- mean(df$COUNT_DV2[df$secondaryAnalysis==0])
SECONDARY_DV2_sd_ctrl <- sd(df$COUNT_DV2[df$secondaryAnalysis==0])
SECONDARY_DV2_n_exp <- length(df$COUNT_DV2[df$secondaryAnalysis==1])
SECONDARY_DV2_n_ctrl <- length(df$COUNT_DV2[df$secondaryAnalysis==0])
SECONDARY_DV2_d <- cohen.d(df$COUNT_DV2, as.factor(df$secondaryAnalysis))$estimate
SECONDARY_DV2_d_CI_UPPER <- cohen.d(df$COUNT_DV2, as.factor(df$secondaryAnalysis))$conf.int[2]
SECONDARY_DV2_d_CI_LOWER <- cohen.d(df$COUNT_DV2, as.factor(df$secondaryAnalysis))$conf.int[1]
SECONDARY_DV2_se <- std.error(df$COUNT_DV2)
# For descriptive stats table
SECONDARY_DV2_descriptives$mean_exp[SECONDARY_DV2_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV2_m_exp, digits=3)
SECONDARY_DV2_descriptives$sd_exp[SECONDARY_DV2_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV2_sd_exp, digits=3)
SECONDARY_DV2_descriptives$mean_ctrl[SECONDARY_DV2_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV2_m_ctrl, digits=3)
SECONDARY_DV2_descriptives$sd_ctrl[SECONDARY_DV2_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV2_sd_ctrl, digits=3)
SECONDARY_DV2_metaVecES <- c(SECONDARY_DV2_metaVecES, (SECONDARY_DV2_d))
SECONDARY_DV2_metaVecSE <- c(SECONDARY_DV2_metaVecSE, SECONDARY_DV2_se)
SECONDARY_DV2_metaVecMeanExp <- c(SECONDARY_DV2_metaVecMeanExp, SECONDARY_DV2_m_exp)
SECONDARY_DV2_metaVecMeanCtrl <- c(SECONDARY_DV2_metaVecMeanCtrl, SECONDARY_DV2_m_ctrl)
for (lab in labNames) {
workingLabPathMain <- paste0(dataDir,"\\",lab,"_main.csv")
workingLabPathExclude <- paste0(dataDir,"\\",lab,"_exclude.csv")
df_main <- readInFile(workingLabPathMain)
df_exclude <- read.csv(workingLabPathExclude)
df <- merge(df,df_exclude,by=c("id","labID"))
# Put N info into labInfo DF
labInfo$N[labInfo$labID == as.factor(lab)] <- nrow(df)
# Exclude flagged cases or those who failed exit interview
df <- df[df$FLAG==0,]
df <- df[df$Understand==1,]
df <- df[df$Familiar==0,]
## ADD REMOVAL BASED ON TIME HERE ##
# Exclude if participant took less than 3 minutes to complete the survey
df$COUNT_DV1 <- 0
if (is_deathword(df$WGTASK_word1_response, deathwords)) {df$COUNT_DV1 <- df$COUNT_DV1 + 1}
if (is_deathword(df$WGTASK_word2_response, deathwords)) {df$COUNT_DV1 <- df$COUNT_DV1 + 1}
if (is_deathword(df$WGTASK_word3_response, deathwords)) {df$COUNT_DV1 <- df$COUNT_DV1 + 1}
if (is_deathword(df$WGTASK_word4_response, deathwords)) {df$COUNT_DV1 <- df$COUNT_DV1 + 1}
if (is_deathword(df$WGTASK_word5_response, deathwords)) {df$COUNT_DV1 <- df$COUNT_DV1 + 1}
df$COUNT_DV2 <- 0
if (gsub(" ", "", tolower(df$WSCTASK_S1_response)) == "buried") {df$COUNT_DV2 <- df$COUNT_DV2 + 1}
if (gsub(" ", "", tolower(df$WSCTASK_S5_response)) == "dead") {df$COUNT_DV2 <- df$COUNT_DV2 + 1}
if (gsub(" ", "", tolower(df$WSCTASK_S12_response)) == "grave") {df$COUNT_DV2 <- df$COUNT_DV2 + 1}
if (gsub(" ", "", tolower(df$WSCTASK_S15_response)) == "killed") {df$COUNT_DV2 <- df$COUNT_DV2 + 1}
if (gsub(" ", "", tolower(df$WSCTASK_S19_response)) == "skull") {df$COUNT_DV2 <- df$COUNT_DV2 + 1}
if (gsub(" ", "", tolower(df$WSCTASK_S22_response)) == "coffin") {df$COUNT_DV2 <- df$COUNT_DV2 + 1}
# Put N info into labInfo DF (with exclusions)
labInfo$Nused[labInfo$labID == as.factor(lab)] <- nrow(df)
# Put % female intoLabInfo DF
TotalWithGender <- table(df$Gender)[names(table(df$Gender))==2] + table(df$Gender)[names(table(df$Gender))==1]
labInfo$percFemale[labInfo$labID == as.factor(lab)] <- format(100*(table(df$Gender)[names(table(df$Gender))==2]/TotalWithGender), digits=3)
# Get mean and SD of age
labInfo$ageMean[labInfo$labID == as.factor(lab)] <- format(mean(df$Age), digits=3)
labInfo$ageSD[labInfo$labID == as.factor(lab)] <- format(sd(df$Age), digits=3)
# Create group identifiers for original experiment
df$originalExperiment <- 0
df$originalExperiment[df$essayGroup==1 & df$delayGroup==1] <- 1
# Create group identifiers for secondary analysis
df$secondaryAnalysis <- 0
df$secondaryAnalysis[df$essayGroup==1] <- 1
# Add to merged dataframe
mergedDF <- rbind(mergedDF, df)
## ANALYSES ##
# Using the following variable naming scheme:
# PRIMARY_DV1 - primary analysis (exact replication of T&H)
# PRIMARY_DV2 - primary analysis using alternate DV
# SECONDARY_ - additional analysis not related directly to T&H
# Calculate tests/stats for primary analysis
PRIMARY_DV1_m_exp <- mean(df$COUNT_DV1[df$originalExperiment==1])
PRIMARY_DV1_sd_exp <- sd(df$COUNT_DV1[df$originalExperiment==1])
PRIMARY_DV1_m_ctrl <- mean(df$COUNT_DV1[df$originalExperiment==0])
PRIMARY_DV1_sd_ctrl <- sd(df$COUNT_DV1[df$originalExperiment==0])
PRIMARY_DV1_r <- cor.test(df$COUNT_DV1, df$DelayTime)
PRIMARY_DV1_se <- std.error(df$COUNT_DV1)
# For descriptive stats table
PRIMARY_DV1_descriptives$mean_exp[PRIMARY_DV1_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV1_m_exp, digits=3)
PRIMARY_DV1_descriptives$sd_exp[PRIMARY_DV1_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV1_sd_exp, digits=3)
PRIMARY_DV1_descriptives$mean_ctrl[PRIMARY_DV1_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV1_m_ctrl, digits=3)
PRIMARY_DV1_descriptives$sd_ctrl[PRIMARY_DV1_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV1_sd_ctrl, digits=3)
PRIMARY_DV1_metaVecR <- c(PRIMARY_DV1_metaVecR, PRIMARY_DV1_r$estimate)
PRIMARY_DV1_metaVecN <- c(PRIMARY_DV1_metaVecN, (PRIMARY_DV1_r$parameter + 2))
PRIMARY_DV1_metaVecES <- c(PRIMARY_DV1_metaVecES, (PRIMARY_DV1_m_exp-PRIMARY_DV1_m_ctrl))
PRIMARY_DV1_metaVecSE <- c(PRIMARY_DV1_metaVecSE, PRIMARY_DV1_se)
PRIMARY_DV1_metaVecMeanExp <- c(PRIMARY_DV1_metaVecMeanExp, PRIMARY_DV1_m_exp)
PRIMARY_DV1_metaVecMeanCtrl <- c(PRIMARY_DV1_metaVecMeanCtrl, PRIMARY_DV1_m_ctrl)
# Calculate tests/stats for primary analysis
PRIMARY_DV2_m_exp <- mean(df$COUNT_DV2[df$originalExperiment==1])
PRIMARY_DV2_sd_exp <- sd(df$COUNT_DV2[df$originalExperiment==1])
PRIMARY_DV2_m_ctrl <- mean(df$COUNT_DV2[df$originalExperiment==0])
PRIMARY_DV2_sd_ctrl <- sd(df$COUNT_DV2[df$originalExperiment==0])
PRIMARY_DV2_r <- cor.test(df$COUNT_DV2, df$DelayTime)
PRIMARY_DV2_se <- std.error(df$COUNT_DV2)
# For descriptive stats table
PRIMARY_DV2_descriptives$mean_exp[PRIMARY_DV2_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV2_m_exp, digits=3)
PRIMARY_DV2_descriptives$sd_exp[PRIMARY_DV2_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV2_sd_exp, digits=3)
PRIMARY_DV2_descriptives$mean_ctrl[PRIMARY_DV2_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV2_m_ctrl, digits=3)
PRIMARY_DV2_descriptives$sd_ctrl[PRIMARY_DV2_descriptives$labID == as.factor(lab)] <- format(PRIMARY_DV2_sd_ctrl, digits=3)
PRIMARY_DV2_metaVecR <- c(PRIMARY_DV2_metaVecR, PRIMARY_DV2_r$estimate)
PRIMARY_DV2_metaVecN <- c(PRIMARY_DV2_metaVecN, (PRIMARY_DV2_r$parameter + 2))
PRIMARY_DV2_metaVecES <- c(PRIMARY_DV2_metaVecES, (PRIMARY_DV2_m_exp-PRIMARY_DV2_m_ctrl))
PRIMARY_DV2_metaVecSE <- c(PRIMARY_DV2_metaVecSE, PRIMARY_DV2_se)
PRIMARY_DV2_metaVecMeanExp <- c(PRIMARY_DV2_metaVecMeanExp, PRIMARY_DV2_m_exp)
PRIMARY_DV2_metaVecMeanCtrl <- c(PRIMARY_DV2_metaVecMeanCtrl, PRIMARY_DV2_m_ctrl)
# Calculate tests/stats for secondary analysis
# Many of these will be identical to primary analyses,
# but calculating for the sake of clarity
SECONDARY_DV1_m_exp <- mean(df$COUNT_DV1[df$secondaryAnalysis==1])
SECONDARY_DV1_sd_exp <- sd(df$COUNT_DV1[df$secondaryAnalysis==1])
SECONDARY_DV1_m_ctrl <- mean(df$COUNT_DV1[df$secondaryAnalysis==0])
SECONDARY_DV1_sd_ctrl <- sd(df$COUNT_DV1[df$secondaryAnalysis==0])
SECONDARY_DV1_n_exp <- length(df$COUNT_DV1[df$secondaryAnalysis==1])
SECONDARY_DV1_n_ctrl <- length(df$COUNT_DV1[df$secondaryAnalysis==0])
SECONDARY_DV1_d <- cohen.d(df$COUNT_DV1, as.factor(df$secondaryAnalysis))$estimate
SECONDARY_DV1_d_CI_UPPER <- cohen.d(df$COUNT_DV1, as.factor(df$secondaryAnalysis))$conf.int[2]
SECONDARY_DV1_d_CI_LOWER <- cohen.d(df$COUNT_DV1, as.factor(df$secondaryAnalysis))$conf.int[1]
SECONDARY_DV1_se <- std.error(df$COUNT_DV1)
# For descriptive stats table
SECONDARY_DV1_descriptives$mean_exp[SECONDARY_DV1_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV1_m_exp, digits=3)
SECONDARY_DV1_descriptives$sd_exp[SECONDARY_DV1_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV1_sd_exp, digits=3)
SECONDARY_DV1_descriptives$mean_ctrl[SECONDARY_DV1_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV1_m_ctrl, digits=3)
SECONDARY_DV1_descriptives$sd_ctrl[SECONDARY_DV1_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV1_sd_ctrl, digits=3)
SECONDARY_DV1_metaVecES <- c(SECONDARY_DV1_metaVecES, (SECONDARY_DV1_d))
SECONDARY_DV1_metaVecSE <- c(SECONDARY_DV1_metaVecSE, SECONDARY_DV1_se)
SECONDARY_DV1_metaVecMeanExp <- c(SECONDARY_DV1_metaVecMeanExp, SECONDARY_DV1_m_exp)
SECONDARY_DV1_metaVecMeanCtrl <- c(SECONDARY_DV1_metaVecMeanCtrl, SECONDARY_DV1_m_ctrl)
SECONDARY_DV2_m_exp <- mean(df$COUNT_DV2[df$secondaryAnalysis==1])
SECONDARY_DV2_sd_exp <- sd(df$COUNT_DV2[df$secondaryAnalysis==1])
SECONDARY_DV2_m_ctrl <- mean(df$COUNT_DV2[df$secondaryAnalysis==0])
SECONDARY_DV2_sd_ctrl <- sd(df$COUNT_DV2[df$secondaryAnalysis==0])
SECONDARY_DV2_n_exp <- length(df$COUNT_DV2[df$secondaryAnalysis==1])
SECONDARY_DV2_n_ctrl <- length(df$COUNT_DV2[df$secondaryAnalysis==0])
SECONDARY_DV2_d <- cohen.d(df$COUNT_DV2, as.factor(df$secondaryAnalysis))$estimate
SECONDARY_DV2_d_CI_UPPER <- cohen.d(df$COUNT_DV2, as.factor(df$secondaryAnalysis))$conf.int[2]
SECONDARY_DV2_d_CI_LOWER <- cohen.d(df$COUNT_DV2, as.factor(df$secondaryAnalysis))$conf.int[1]
SECONDARY_DV2_se <- std.error(df$COUNT_DV2)
# For descriptive stats table
SECONDARY_DV2_descriptives$mean_exp[SECONDARY_DV2_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV2_m_exp, digits=3)
SECONDARY_DV2_descriptives$sd_exp[SECONDARY_DV2_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV2_sd_exp, digits=3)
SECONDARY_DV2_descriptives$mean_ctrl[SECONDARY_DV2_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV2_m_ctrl, digits=3)
SECONDARY_DV2_descriptives$sd_ctrl[SECONDARY_DV2_descriptives$labID == as.factor(lab)] <- format(SECONDARY_DV2_sd_ctrl, digits=3)
SECONDARY_DV2_metaVecES <- c(SECONDARY_DV2_metaVecES, (SECONDARY_DV2_d))
SECONDARY_DV2_metaVecSE <- c(SECONDARY_DV2_metaVecSE, SECONDARY_DV2_se)
SECONDARY_DV2_metaVecMeanExp <- c(SECONDARY_DV2_metaVecMeanExp, SECONDARY_DV2_m_exp)
SECONDARY_DV2_metaVecMeanCtrl <- c(SECONDARY_DV2_metaVecMeanCtrl, SECONDARY_DV2_m_ctrl)
}
# Clean things up by deleting leftover dataframes
rm(df_main)
rm(df_rating_DV1)
rm(df_rating_DV2)
rm(df_exclude)
# Create descriptive statistics tables
write.csv(PRIMARY_DV1_descriptives, paste0(outDir, "\\PRIMARY_DV1_descriptives.csv"), row.names = F)
write.csv(PRIMARY_DV2_descriptives, paste0(outDir, "\\PRIMARY_DV2_descriptives.csv"), row.names = F)
write.csv(SECONDARY_DV1_descriptives, paste0(outDir, "\\SECONDARY_DV1_descriptives.csv"), row.names = F)
write.csv(SECONDARY_DV2_descriptives, paste0(outDir, "\\SECONDARY_DV2_descriptives.csv"), row.names = F)
write.csv(labInfo, paste0(outDir, "\\labDescriptives.csv"), row.names = F)
# Meta analysis
sink(paste0(outDir, "\\ma-primary-DV1-bg.txt"))
metaRAW_DV1 <- rma.uni(yi = PRIMARY_DV1_metaVecES, sei = PRIMARY_DV1_metaVecSE)
summary(metaRAW_DV1)
sink()
# Meta analysis
es <- escalc(measure="COR", ri=PRIMARY_DV1_metaVecR, ni=PRIMARY_DV1_metaVecN)
sink(paste0(outDir, "\\ma-primary-DV1-cont.txt"))
metaR_DV1 <- rma.uni(es)
summary(metaR_DV1)
sink()
# Meta analysis
sink(paste0(outDir, "\\ma-primary-DV2-bg.txt"))
metaRAW_DV2 <- rma.uni(yi = PRIMARY_DV2_metaVecES, sei = PRIMARY_DV2_metaVecSE)
summary(metaRAW_DV2)
sink()
# Meta analysis
es <- escalc(measure="COR", ri=PRIMARY_DV2_metaVecR, ni=PRIMARY_DV2_metaVecN)
sink(paste0(outDir, "\\ma-primary-DV2-cont.txt"))
metaR_DV2 <- rma.uni(es)
summary(metaR_DV2)
sink()
# Raw ES of original study
THes <- .94-.58
# SE estimate using pooled SD from original study
THse <- sqrt(((1.21^2)+(.67^2)+(.73^2)+(.67^2))/4)/sqrt(120)
Cairo(file=paste0(outDir, "\\forest_main_WG.png"),
bg="white",
type="png",
units="in",
width=11, height=7,
#pointsize=12,
dpi=600)
forest(x = c(THes, PRIMARY_DV1_metaVecES), sei = c(THse, PRIMARY_DV1_metaVecSE), xlab="Mean difference", cex.lab=1.4,
ilab=cbind(c(".94", format(PRIMARY_DV1_metaVecMeanExp, digits=3)), c(".58", format(PRIMARY_DV1_metaVecMeanCtrl, digits=3))),
ilab.xpos=c(grconvertX(.18, from = "ndc", "user"),
grconvertX(.28, from = "ndc", "user")), cex.axis=1.1, lwd=1.4,
rows=c(length(labNames)+7, (length(labNames)+2):3), ylim=c(-2, length(labNames)+11),
slab = c("Original Study", paste0("Study ", seq_len(length(labNames)))))
abline(h=length(labNames)+5, lwd=1.4)
text(grconvertX(.019, from = "ndc", "user"), length(labNames)+3.75, "RRR Studies", cex=1.2, pos = 4)
text(grconvertX(.053, from = "ndc", "user"), length(labNames)+10, "Study", cex=1.2)
text(grconvertX(.18, from = "ndc", "user"), length(labNames)+10, "Delay", cex=1.2)
text(grconvertX(.28, from = "ndc", "user"), length(labNames)+10, "Other Cond.", cex=1.2)
text(grconvertX(.875, from = "ndc", "user"), length(labNames)+10, paste0("Mean difference", " [95% CI]"), cex=1.2)
abline(h=1, lwd=1.4)
addpoly(metaRAW_DV1, atransf=FALSE, row=-1, cex=1.3, mlab="Meta-Analytic Effect Size:")
dev.off()
Cairo(file=paste0(outDir, "\\forest_main_WC.png"),
bg="white",
type="png",
units="in",
width=11, height=7,
#pointsize=12,
dpi=600)
forest(x = PRIMARY_DV2_metaVecES, sei = PRIMARY_DV2_metaVecSE, xlab="Mean difference", cex.lab=1.4,
ilab=cbind(format(PRIMARY_DV2_metaVecMeanExp, digits=3), format(PRIMARY_DV2_metaVecMeanCtrl, digits=3)),
ilab.xpos=c(grconvertX(.18, from = "ndc", "user"),
grconvertX(.28, from = "ndc", "user")), cex.axis=1.1, lwd=1.4,
ylim=c(-2, length(labNames)+3),
slab = paste0("Study ", seq_len(length(labNames))))
text(grconvertX(.053, from = "ndc", "user"), length(labNames)+2, "Study", cex=1.2)
text(grconvertX(.18, from = "ndc", "user"), length(labNames)+2, "Death", cex=1.2)
text(grconvertX(.28, from = "ndc", "user"), length(labNames)+2, "Dental Pain", cex=1.2)
text(grconvertX(.875, from = "ndc", "user"), length(labNames)+2, paste0("Mean difference", " [95% CI]"), cex=1.2)
abline(h=0, lwd=1.4)
addpoly(metaRAW_DV2, atransf=FALSE, row=-1, cex=1.3, mlab="Meta-Analytic Effect Size:")
dev.off()
all_linear <- ggplot(mergedDF, aes(x = DelayTime, y = COUNT_DV1, group = labID)) +
labs(x = "Delay Time", y = "Word Count") +
geom_smooth(method = "loess", se = T, color = "darkgrey") +
geom_point(alpha = 0.3, size = 0) +
facet_wrap(~labID, scales = "free")
ggsave(paste0(outDir, "\\PRIMARY_DV1_line-graphs.png"))
all_linear <- ggplot(mergedDF, aes(x = DelayTime, y = COUNT_DV2, group = labID)) +
labs(x = "Delay Time", y = "Word Count") +
geom_smooth(method = "loess", se = T, color = "darkgrey") +
geom_point(alpha = 0.3, size = 0) +
facet_wrap(~labID, scales = "free")
ggsave(paste0(outDir, "\\PRIMARY_DV2_line-graphs.png"))
# Meta analysis
sink(paste0(outDir, "\\ma-secondary-DV1.txt"))
secondary_DV1_meta <- rma.uni(yi = SECONDARY_DV1_metaVecES, sei = SECONDARY_DV1_metaVecSE)
summary(secondary_DV1_meta)
sink()
# Meta analysis
sink(paste0(outDir, "\\ma-secondary-DV2.txt"))
secondary_DV2_meta <- rma.uni(yi = SECONDARY_DV2_metaVecES, sei = SECONDARY_DV2_metaVecSE)
summary(secondary_DV2_meta)
sink()
Cairo(file=paste0(outDir, "\\forest_secondary_WG.png"),
bg="white",
type="png",
units="in",
width=11, height=7,
#pointsize=12,
dpi=600)
forest(x = SECONDARY_DV1_metaVecES, sei = SECONDARY_DV1_metaVecSE, xlab="Mean difference", cex.lab=1.4,
ilab=cbind(format(SECONDARY_DV1_metaVecMeanExp, digits=3), format(SECONDARY_DV1_metaVecMeanCtrl, digits=3)),
ilab.xpos=c(grconvertX(.18, from = "ndc", "user"),
grconvertX(.28, from = "ndc", "user")), cex.axis=1.1, lwd=1.4,
ylim=c(-2, length(labNames)+3),
slab = paste0("Study ", seq_len(length(labNames))))
text(grconvertX(.053, from = "ndc", "user"), length(labNames)+2, "Study", cex=1.2)
text(grconvertX(.18, from = "ndc", "user"), length(labNames)+2, "Death", cex=1.2)
text(grconvertX(.28, from = "ndc", "user"), length(labNames)+2, "Dental Pain", cex=1.2)
text(grconvertX(.875, from = "ndc", "user"), length(labNames)+2, paste0("Mean difference", " [95% CI]"), cex=1.2)
abline(h=0, lwd=1.4)
addpoly(secondary_DV1_meta, atransf=FALSE, row=-1, cex=1.3, mlab="Meta-Analytic Effect Size:")
dev.off()
Cairo(file=paste0(outDir, "\\forest_secondary_WC.png"),
bg="white",
type="png",
units="in",
width=11, height=7,
#pointsize=12,
dpi=600)
forest(x = SECONDARY_DV2_metaVecES, sei = SECONDARY_DV2_metaVecSE, xlab="Mean difference", cex.lab=1.4,
ilab=cbind(format(SECONDARY_DV2_metaVecMeanExp, digits=3), format(SECONDARY_DV2_metaVecMeanCtrl, digits=3)),
ilab.xpos=c(grconvertX(.18, from = "ndc", "user"),
grconvertX(.28, from = "ndc", "user")), cex.axis=1.1, lwd=1.4,
ylim=c(-2, length(labNames)+3),
slab = paste0("Study ", seq_len(length(labNames))))
text(grconvertX(.053, from = "ndc", "user"), length(labNames)+2, "Study", cex=1.2)
text(grconvertX(.18, from = "ndc", "user"), length(labNames)+2, "Death", cex=1.2)
text(grconvertX(.28, from = "ndc", "user"), length(labNames)+2, "Dental Pain", cex=1.2)
text(grconvertX(.875, from = "ndc", "user"), length(labNames)+2, paste0("Mean difference", " [95% CI]"), cex=1.2)
abline(h=0, lwd=1.4)
addpoly(secondary_DV2_meta, atransf=FALSE, row=-1, cex=1.3, mlab="Meta-Analytic Effect Size:")
dev.off()
